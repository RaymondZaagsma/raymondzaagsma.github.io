[{"categories":["MDT"],"content":"Update MDT with Windows 11 22H2 ADK Download the Windows 11 ADK version 22H2 at the following link Windows 11 ADK 22H2 The biggest change is it has no more 32 bit x86 support, that means the ADK no longer contains the 32 bit x86 version of Windows PE. MMC Error After updating to the windows 11 22H2 ADK the MDT console crashes when opening the Windows PE tab of the deploytment share settings. To fix this error we need to create a folder MkDir \"C:\\Program Files (x86)\\Windows Kits\\10\\Assessment and Deployment Kit\\Windows Preinstallation Environment\\x86\\WinPE_OCs\" HTA applications report Script error After updating the boot image, and booting into the Lite Touch x64 boot image another error is generated. To resolve this error we need to edit the Unattend_PE_x64.xml HTA applications rely on MSHTML and starting with Windows 11, version 22H2, the default legacy scripting engine was changed. To work around this issue you need to add the following registry value in WinPE: reg.exe add \"HKLM\\Software\\Microsoft\\Internet Explorer\\Main\" /t REG_DWORD /v JscriptReplacement /d 0 /f To enable this change in MDT, we recommend that you back up the following file: C:\\Program Files\\Microsoft Deployment Toolkit\\Templates\\Unattend_PE_x64.xml and to modify it as follows: \u003cunattend xmlns=\"urn:schemas-microsoft-com:unattend\"\u003e \u003csettings pass=\"windowsPE\"\u003e \u003ccomponent name=\"Microsoft-Windows-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" xmlns:wcm=\"http://schemas.microsoft.com/WMIConfig/2002/State\"\u003e \u003cDisplay\u003e \u003cColorDepth\u003e32\u003c/ColorDepth\u003e \u003cHorizontalResolution\u003e1024\u003c/HorizontalResolution\u003e \u003cRefreshRate\u003e60\u003c/RefreshRate\u003e \u003cVerticalResolution\u003e768\u003c/VerticalResolution\u003e \u003c/Display\u003e \u003cRunSynchronous\u003e \u003cRunSynchronousCommand wcm:action=\"add\"\u003e \u003cDescription\u003eLite Touch PE\u003c/Description\u003e \u003cOrder\u003e1\u003c/Order\u003e \u003cPath\u003ereg.exe add \"HKLM\\Software\\Microsoft\\Internet Explorer\\Main\" /t REG_DWORD /v JscriptReplacement /d 0 /f\u003c/Path\u003e \u003c/RunSynchronousCommand\u003e \u003cRunSynchronousCommand wcm:action=\"add\"\u003e \u003cDescription\u003eLite Touch PE\u003c/Description\u003e \u003cOrder\u003e2\u003c/Order\u003e \u003cPath\u003ewscript.exe X:\\Deploy\\Scripts\\LiteTouch.wsf\u003c/Path\u003e \u003c/RunSynchronousCommand\u003e \u003c/RunSynchronous\u003e \u003c/component\u003e \u003c/settings\u003e \u003c/unattend\u003e WDS multicast stops working After you updated your MDT boot image to ADK for Windows 11 22H2 and you are using multicast popups appear prompting wdscommonlib.dll and imagelib.dll are missing in WinPE. The right way to add WDS multicast to WinPE is to install WinPE-WDS-Tools OC (WinPE optional components) into WinPE. Follow this example to install WinPE-WDS-Tools OC in WinPE (assuming the mount folder E:\\mnt exists). Dism /mount-wim /WimFile:\"E:\\DeploymentShare\\Boot\\LiteTouchPE_multicast_x64.wim\" /Index:1 /MountDir:E:\\mnt Dism /Image:\"E:\\mnt\" /Add-Package /PackagePath:\"C:\\Program Files (x86)\\Windows Kits\\10\\Assessment and Deployment Kit\\Windows Preinstallation Environment\\amd64\\WinPE_OCs\\WinPE-WDS-Tools.cab\" Dism /Image:\"E:\\mnt\" /Add-Package /PackagePath:\"C:\\Program Files (x86)\\Windows Kits\\10\\Assessment and Deployment Kit\\Windows Preinstallation Environment\\amd64\\WinPE_OCs\\en-us\\WinPE-WDS-Tools_en-us.cab\" Dism /Unmount-Wim /MountDir:E:\\mnt /Commit Add or replace the multicast enabled boot image in WDS snap-in for Microsoft Management Console (MMC). ","date":"08-10-2022","objectID":"/windows_11_22h2_adk/:1:0","tags":["MDT"],"title":"Windows 11 22H2 ADK","uri":"/windows_11_22h2_adk/"},{"categories":["MDT"],"content":"The content of this blog was inspirid by the following information Michael Niehaus “Get ready (and get MDT ready) to deploy Windows 11 22H2” Out of Office Hours https://oofhours.com/2022/10/06/get-ready-and-get-mdt-ready-to-deploy-windows-11-22h2/ Johan Arwidmark “Notes from the Lab on Windows ADK for Windows 11 22H2” https://www.deploymentresearch.com/notes-from-the-lab-on-windows-adk-for-windows-11-22h2/ Microsoft “Microsoft Docs memdocs” https://github.com/MicrosoftDocs/memdocs/blob/main/memdocs/configmgr/mdt/known-issues.md ","date":"08-10-2022","objectID":"/windows_11_22h2_adk/:1:1","tags":["MDT"],"title":"Windows 11 22H2 ADK","uri":"/windows_11_22h2_adk/"},{"categories":["AVD"],"content":"How to enable Azure Virtual Desktop Hybrid single sign-on. NOTE : This currently only work for Windows 11 22h2 insider preview build. login into the Azure Portal. Go to Azure Virtual Desktop. Open one of the created hostpools. Select RDP Properties. Configure : RDP will attempt to use Azure AD authentication to sign in Go to the advanced tab. The property that has been added is : enablerdsaadauth:i:1 Configure Azure AD Keberos Azure AD Kerberos # First, ensure TLS 1.2 for PowerShell gallery access. [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12 # Install the Azure AD Kerberos PowerShell Module. Install-Module -Name AzureADHybridAuthenticationManagement -AllowClobber Select one of the example scenarios that fits your organization, is this blog i used example one. # Specify the on-premises Active Directory domain. A new Azure AD # Kerberos Server object will be created in this Active Directory domain. $domain = $env:USERDNSDOMAIN # Enter an Azure Active Directory global administrator username and password. $cloudCred = Get-Credential -Message 'An Active Directory user who is a member of the Global Administrators group for Azure AD.' # Enter a domain administrator username and password. $domainCred = Get-Credential -Message 'An Active Directory user who is a member of the Domain Admins group.' # Create the new Azure AD Kerberos Server object in Active Directory # and then publish it to Azure Active Directory. Set-AzureADKerberosServer -Domain $domain -CloudCredential $cloudCred -DomainCredential $domainCred This script will create a user account and a computer account object in the onprem Active Directory, to redirect all authentication requests over to Azure AD. ","date":"26-08-2022","objectID":"/avd_aad_sso/:1:0","tags":["AVD"],"title":"AVD Azure AD SSO","uri":"/avd_aad_sso/"},{"categories":["MDT"],"content":"How to add steps numbers to an MDT task sequence In order to add steps numbers to the task sequence you will have to modify the ZTIUtility.vbs file. Make a copy of the ZTIUtility.vbs , then in the original ZTIUtility.vbs replace the code mentioned below. ","date":"20-08-2022","objectID":"/add_steps_numbers_to_tasksequence/:1:0","tags":["MDT"],"title":"Add Steps numbers to Task Sequence","uri":"/add_steps_numbers_to_tasksequence/"},{"categories":["MDT"],"content":"Original ReportProgress Function in ZTIUtility.vbs Public Function ReportProgress(sMsg, iPercent) Dim iMaxPercent Dim oProgress Dim uStep Dim uMaxStep CreateEntry \"Update progress [ \" \u0026 iPercent \u0026 \" ] : \" \u0026 sMsg , LogTypeVerbose ' Try to create the progress UI object On Error Resume Next Set oProgress = CreateObject(\"Microsoft.SMS.TSProgressUI\") If Err then Err.Clear ' Record the progress in the registry oShell.RegWrite \"HKLM\\Software\\Microsoft\\Deployment 4\\ProgressPercent\", iPercent, \"REG_DWORD\" oShell.RegWrite \"HKLM\\Software\\Microsoft\\Deployment 4\\ProgressText\", sMsg, \"REG_SZ\" on error goto 0 Exit Function End if On Error Goto 0 ' Update the progress On Error Resume Next iMaxPercent = 100 uStep = CLng(oEnvironment.Item(\"_SMSTSNextInstructionPointer\")) uMaxStep = CLng(oEnvironment.Item(\"_SMSTSInstructionTableSize\")) Call oProgress.ShowActionProgress(oEnvironment.Item(\"_SMSTSOrgName\"), oEnvironment.Item(\"_SMSTSPackageName\"), oEnvironment.Item(\"_SMSTSCustomProgressDialogMessage\"), oEnvironment.Item(\"_SMSTSCurrentActionName\"), (uStep), (uMaxStep), sMsg, (iPercent), (iMaxPercent)) If Err then CreateEntry \"Unable to update progress: \" \u0026 Err.Description \u0026 \" (\" \u0026 Err.Number \u0026 \")\", LogTypeInfo ReportProgress = Failure Err.Clear Exit Function End if On Error Goto 0 ' Dispose of the object Set oProgress = Nothing End Function ","date":"20-08-2022","objectID":"/add_steps_numbers_to_tasksequence/:2:0","tags":["MDT"],"title":"Add Steps numbers to Task Sequence","uri":"/add_steps_numbers_to_tasksequence/"},{"categories":["MDT"],"content":"Modified ReportProgress Function in ZTIUtility.vbs Public Function ReportProgress(sMsg, iPercent) Dim iMaxPercent Dim oProgress Dim uStep Dim uMaxStep 'Region http://www.systanddeploy.com/2018/02/add-complete-progression-status-to.html Dim uStatus, uStep_Division, uStep_Division_Round, uStep_Percent 'End Region CreateEntry \"Update progress [ \" \u0026 iPercent \u0026 \" ] : \" \u0026 sMsg , LogTypeVerbose ' Try to create the progress UI object On Error Resume Next Set oProgress = CreateObject(\"Microsoft.SMS.TSProgressUI\") If Err then Err.Clear ' Record the progress in the registry oShell.RegWrite \"HKLM\\Software\\Microsoft\\Deployment 4\\ProgressPercent\", iPercent, \"REG_DWORD\" oShell.RegWrite \"HKLM\\Software\\Microsoft\\Deployment 4\\ProgressText\", sMsg, \"REG_SZ\" on error goto 0 Exit Function End if On Error Goto 0 ' Update the progress On Error Resume Next iMaxPercent = 100 uStep = CLng(oEnvironment.Item(\"_SMSTSNextInstructionPointer\")) uMaxStep = CLng(oEnvironment.Item(\"_SMSTSInstructionTableSize\")) 'Region http://www.systanddeploy.com/2018/02/add-complete-progression-status-to.html uStep_Division = uStep / uMaxStep * 100 uStep_Division_Round = Round(uStep_Division) uStep_Percent = uStep_Division_Round \u0026 \" % completed\" uStatus = oEnvironment.Item(\"_SMSTSCurrentActionName\") \u0026 \" - \" \u0026 \" Step \" \u0026 uStep \u0026 \" on \" \u0026 uMaxStep \u0026 \" - \" \u0026 uStep_Percent Call oProgress.ShowActionProgress(oEnvironment.Item(\"_SMSTSOrgName\"), oEnvironment.Item(\"_SMSTSPackageName\"), oEnvironment.Item(\"_SMSTSCustomProgressDialogMessage\"), uStatus, (uStep), (uMaxStep), sMsg, (iPercent), (iMaxPercent)) 'End Region If Err then CreateEntry \"Unable to update progress: \" \u0026 Err.Description \u0026 \" (\" \u0026 Err.Number \u0026 \")\", LogTypeInfo ReportProgress = Failure Err.Clear Exit Function End if On Error Goto 0 ' Dispose of the object Set oProgress = Nothing End Function ","date":"20-08-2022","objectID":"/add_steps_numbers_to_tasksequence/:3:0","tags":["MDT"],"title":"Add Steps numbers to Task Sequence","uri":"/add_steps_numbers_to_tasksequence/"},{"categories":["MDT"],"content":"When receiving the error, “A connection to the deployment share (\\mdt\\DeploymentShare) could not be made.” The solution is to add a delay to a task sequence. In the deployment share , scripts folder edit the Litetouch.wsf script. Function ValidateDeployRootWithRecovery Dim sARF Dim sNetworkErrorHint DIm iRetVal Dim sLTISuspend 'Delay wait for DHCP wscript.sleep 5000 If oUtility.ValidateConnectionEx(oEnvironment.Item(\"DeployRoot\"), True) = Success then ValidateDeployRootWithRecovery = SUCCESS exit function End if ","date":"20-08-2022","objectID":"/adding_delay_to-_mdt_tasksequence/:0:0","tags":["MDT"],"title":"Adding a delay to MDT Task Sequence","uri":"/adding_delay_to-_mdt_tasksequence/"},{"categories":["MDT"],"content":"Sometimes MDT deployments fail and leave the disk in a dirty (failed) state, whem you choose yes and the task sequence failes try the following solution. Press F8 (opens a CMD window) Unplug any USB drives or other mass storage devices - you should end up with just the internal hard drive left (CD/DVD drives don’t count here) In the CMD window enter: DiskPart (launches the Disk Partitioning window) In the DiskPart window enter: list disk (this will show you a list of discs available) If all other drives were unattached then only 1 disk will be listed - note the number associated with the disk (most likely it will be ZERO) In the DiskPart window enter: select disk # (where # is your disc number) In the DiskPart window enter: clean (this will wipe the disk clean of all partitions and therefore clear your dirty deployment) In the DiskPart window enter: exit (should close) In the CMD window enter\" exit (should close and reboot) ","date":"20-08-2022","objectID":"/dirty_enviromnet/:0:0","tags":["MDT"],"title":"Dirty Environment","uri":"/dirty_enviromnet/"},{"categories":["MDT"],"content":"Windows 10 deployments using the Microsoft Deployment Toolkit (MDT) build 8456 fail when used with the Windows Assessment and Deployment Kit (ADK) for Windows 10 and 11. The BIOS firmware type is incorrectly identified as UEFI resulting in failures when refreshing an existing computer with a new version of Windows. When this issue occurs, the smsts.log will record the following entry: UEFI: true Errors resembling the following are then recorded at the end of the process. The following update to resolve this problem is available for download from the Microsoft Download Center: Download this update now. Close the Deployment Workbench. Backup the existing x86 and x64 versions of the Microsoft.BDD.Utility.dll file in the following locations. %ProgramFiles%\\Microsoft Deployment Toolkit\\Templates\\Distribution\\Tools\\x86 %ProgramFiles%\\Microsoft Deployment Toolkit\\Templates\\Distribution\\Tools\\x64\\ Copy the new files extracted from MDT_KB4564442.exe over the old versions. For each deployment share that you have created, repeat the file replacement (e.g. C:\\DeploymentShare\\Tools\\x86, C:\\DeploymentShare\\Tools\\x64, etc.). Open the Deployment Workbench, select the Deployment Share and choose the Update Deployment Share option, choosing to completely regenerate the boot image. Perform this step for each deployment share to ensure each one is updated with the correct binaries. ","date":"20-08-2022","objectID":"/failure_5616/:0:0","tags":["MDT"],"title":"Failure 5616","uri":"/failure_5616/"},{"categories":["MDT"],"content":"This powershell module can download, install or import the Visual C++ Redistributables into MDT. I use this Powershell Module to install VCRedist during the task sequence, i made a small adjustment to the script because the installation of the Powershell Module needs Nuget to work properly. I add this powershell script as an application into MDT and add it to the task sequence. $installedPackageProvider = Get-PackageProvider if ($installedPackageProvider.Name -notmatch \"NuGet\") { Install-PackageProvider -Name NuGet -force Write-Host(\"Install powershell module NuGet\") } $path = \"C:\\VcRedist\" If(!(test-path $path)) { New-Item -ItemType Directory -Force -Path $path } Install-Module VcRedist -Force Write-Host(\"Install powershell module VcRedist\") Import-Module VcRedist Write-Host(\"import powershell module VcRedist\") $VcList = Get-VcList | Get-VcRedist -Path \"C:\\VcRedist\" $VcList | Install-VcRedist -Path C:\\VcRedist This script is originally created by Aaron Parker, see link below for the original article. Original Article ","date":"20-08-2022","objectID":"/install_visual_c-_redistributables_with_vcredist/:0:0","tags":["MDT"],"title":"Install Visual C++ Redistributables with VcRedist","uri":"/install_visual_c-_redistributables_with_vcredist/"},{"categories":["PSADT"],"content":"These are code snippits, I frequently use in PSADT - PowerShell App Deployment Toolkit Commonly used PSADT env variables $envCommonDesktop # C:\\Users\\Public\\Desktop $envCommonStartMenuPrograms # C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs $envProgramFiles # C:\\Program Files $envProgramFilesX86 # C:\\Program Files (x86) $envProgramData # c:\\ProgramData $envUserDesktop # c:\\Users\\{user currently logged in}\\Desktop $envUserStartMenuPrograms # c:\\Users\\{user currently logged in}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs $envSystemDrive # c: $envWinDir # c:\\windows How to load (“dotsource”) PSADT functions/variables for manual testing (your powershell window must be run as administrator first) cd \"$path_to_PSADT_folder_youre_working_from\" . .\\AppDeployToolkit\\AppDeployToolkitMain.ps1 Examples of exe install Execute-Process -Path '\u003capplication\u003e.exe' -Parameters '/quiet' -WaitForMsiExec:$true Execute-Process -Path \"$dirFiles\\DirectX\\DXSetup.exe\" -Parameters '/silent' -WindowStyle 'Hidden' open notepad, don’t wait for it to close before proceeding (i.e. continue with script) Execute-Process -Path \"$envSystemRoot\\notepad.exe\" -NoWait Execute an .exe, and hide confidential parameters from log file $serialisation_params = '-batchmode -quit -serial \u003caa-bb-cc-dd-ee-ffff11111\u003e -username \"\u003cserialisation username\u003e\" -password \"SuperSecret123\"' Execute-Process -Path \"$envProgramFiles\\Application\\Serialise.exe\" -Parameters \"$serialisation_params\" -SecureParameters:$True Example to install an msi Execute-MSI -Action 'Install' -Path \"$dirFiles\\\u003capplication\u003e.msi\" -Parameters 'REBOOT=ReallySuppress /QN' Execute-MSI -Action 'Install' -Path 'Discovery 2015.1.msi' MSI install + transform file Execute-MSI -Action 'Install' -Path 'Adobe_Reader_11.0.0_EN.msi' -Transform 'Adobe_Reader_11.0.0_EN_01.mst' Install a patch Execute-MSI -Action 'Patch' -Path 'Adobe_Reader_11.0.3_EN.msp' To uninstall an MSI Execute-MSI -Action Uninstall -Path '{5708517C-59A3-45C6-9727-6C06C8595AFD}' Uninstall a number of msi codes \"{2E873893-A883-4C06-8308-7B491D58F3D6}\", \u003c# Example #\u003e` \"{2E873893-A883-4C06-8308-7B491D58F3D6}\", \u003c# Example #\u003e` \"{2E873893-A883-4C06-8308-7B491D58F3D6}\", \u003c# Example #\u003e` \"{2E873893-A883-4C06-8308-7B491D58F3D6}\", \u003c# Example #\u003e` \"{2E873893-A883-4C06-8308-7B491D58F3D6}\", \u003c# Example #\u003e` \"{B234DC00-1003-47E7-8111-230AA9E6BF10}\" \u003c# Last example cannot have a comma after the double quotes #\u003e` | % { Execute-MSI -Action 'Uninstall' -Path \"$_\" } \u003c# foreach item, uninstall #\u003e Run a vbscript Execute-Process -Path \"cscript.exe\" -Parameters \"$dirFiles\\whatever.vbs\" Copy a file to the correct relative location for all user accounts grabbed from here: http://psappdeploytoolkit.com/forums/topic/copy-file-to-all-users-currently-logged-in-and-for-all-future-users/ $ProfilePaths = Get-UserProfiles | Select-Object -ExpandProperty 'ProfilePath' ForEach ($Profile in $ProfilePaths) { Copy-File -Path \"$dirFiles\\Example\\example.ini\" -Destination \"$Profile\\Example\\To\\Path\\\" } Remove registry key these are to delete the whole ‘folder’ reg key Remove-RegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Macromedia\\FlashPlayer\\SafeVersions' -Recurse Remove-RegistryKey -Key 'HKLM:SOFTWARE\\Macromedia\\FlashPlayer\\SafeVersions' -Recurse This is to remove a specific reg key item from within a ‘folder’ Remove-RegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run' -Name 'RunAppInstall' Remove-RegistryKey -Key 'HKLM:SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run' -Name 'RunAppInstall' Create a reg key Set-RegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\LMKR\\Licensing' -Name 'LMKR_LICENSE_FILE' -Value '@license'-Type String -ContinueOnError:$True To set an HKCU key for all users including default profile [scriptblock]$HKCURegistrySettings = { # I included both to illustrate that HKCU\\ is an acceptable abbreviation Set-RegistryKey -Key 'HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AppX4hxtad77fbk3jkkeerkrm0ze94wjf3s9' -Name 'NoOpenWith' -Value '\"\"'-Type String -Con","date":"20-08-2022","objectID":"/psadt_cheatsheet/:0:0","tags":["PSDAT"],"title":"PSADT Cheatsheet","uri":"/psadt_cheatsheet/"},{"categories":null,"content":"about","date":"01-01-0001","objectID":"/about/about/","tags":null,"title":"About","uri":"/about/about/"},{"categories":null,"content":"About Me My name is Raymond Zaagsma and I live in the city of Rotterdam, The Netherlands. I work as an Senior Consultant at Pink Elephant Netherlands. My professional focus is on products offered by Microsoft like Enterprise Mobility, Azure Virtual Desktop, Azure Image Builder, Microsoft Deployment Toolkit and Winget. Other product like Powershell App Deployment Toolkit for Application Packaging and Liquit will also be reviewed. ","date":"01-01-0001","objectID":"/about/about/:1:0","tags":null,"title":"About","uri":"/about/about/"}]