[{"categories":["MDT"],"content":"How to disable F8 MDT MDT, or Microsoft Deployment Toolkit, is a powerful tool used by IT professionals to automate the deployment of Windows operating systems and applications. However, sometimes the F8 key can interfere with the deployment process, leading to a less than optimal experience. In this blog post, we’ll explore how to disable the F8 key during MDT deployment to ensure a smoother process. The F8 key is a useful tool in Windows, allowing users to access the Advanced Boot Options menu when they encounter startup issues or need to troubleshoot problems. However, during MDT deployment, pressing F8 can interrupt the deployment process and take users out of the automated deployment environment. This can cause frustration for IT professionals and slow down the deployment process. To disable the F8 key during MDT deployment, follow these steps: Step 1: Open the the winpeshl.ini file found in the C:\\Program Files\\Microsoft Deployment Toolkit\\Templates directory of your MDT installation. Step 2: Replace /Bootstrap with /BootstrapNoSF8 in these text files. Now, when deploying Windows using MDT, the F8 key will be disabled, and users will not be able to interrupt the deployment process by accessing the Advanced Boot Options menu. It’s important to note that disabling the F8 key can impact troubleshooting efforts if issues arise during deployment. IT professionals should weigh the pros and cons of disabling the F8 key before implementing this change. In conclusion, disabling the F8 key during MDT deployment can help streamline the deployment process and ensure a smoother experience for IT professionals. By following the steps outlined above, you can easily disable the F8 key in MDT and ensure a successful deployment. ","date":"10-04-2023","objectID":"/mdt_disable_f8/:1:0","tags":["MDT"],"title":"MDT Disable F8","uri":"/mdt_disable_f8/"},{"categories":["Winget"],"content":"Winget The New Windows Package Manager If you’re a Windows user, you’re probably familiar with the process of downloading and installing software from the internet. It can be a time-consuming process that involves visiting various websites, downloading installers, and manually installing each program. But now, Microsoft has introduced a new solution to simplify the process: Winget. Winget is a new open-source command-line tool for Windows that allows you to quickly and easily install software packages from the command line. It’s similar to package managers like apt-get on Linux or Homebrew on macOS, but specifically designed for the Windows platform. ","date":"03-04-2023","objectID":"/winget_introduction/:0:0","tags":["Winget"],"title":"Winget Introduction","uri":"/winget_introduction/"},{"categories":["Winget"],"content":"How does it work? Winget works by using a repository of software packages, much like other package managers. When you run the Winget command with the name of a package, it will search the repository for that package and download and install it automatically. To use Winget, you first need to install it on your system. You can do this by downloading the installer from the Microsoft Store or by using PowerShell to install it directly. Once installed, you can use the Winget command in the command prompt or PowerShell to install packages. For example, if you want to install Google Chrome using Winget, you would simply run the following command: winget install Google.Chrome Winget will then search the repository for the Chrome package, download it, and install it on your system. It’s as simple as that! ","date":"03-04-2023","objectID":"/winget_introduction/:1:0","tags":["Winget"],"title":"Winget Introduction","uri":"/winget_introduction/"},{"categories":["Winget"],"content":"What are the benefits? The main benefit of Winget is that it simplifies the process of installing software on Windows. You no longer have to visit various websites, download installers, and manually install each program. Instead, you can install software with a single command from the command line. Additionally, Winget ensures that you’re downloading software from a trusted source. The repository is maintained by Microsoft, and all packages are reviewed and approved before being added to the repository. This helps to prevent malware and other security issues that can arise from downloading software from untrusted sources. Finally, Winget makes it easy to install multiple packages at once. You can create a batch file that contains a list of packages to install, and Winget will install them all automatically. This is great for setting up a new system or reinstalling Windows on an existing system. ","date":"03-04-2023","objectID":"/winget_introduction/:2:0","tags":["Winget"],"title":"Winget Introduction","uri":"/winget_introduction/"},{"categories":["Winget"],"content":"Conclusion Winget is a powerful new tool for Windows users that simplifies the process of installing software. With Winget, you can install software packages from the command line quickly and easily, and with the assurance that the software is coming from a trusted source. If you’re a Windows user, I highly recommend giving Winget a try! ","date":"03-04-2023","objectID":"/winget_introduction/:3:0","tags":["Winget"],"title":"Winget Introduction","uri":"/winget_introduction/"},{"categories":["Intune"],"content":"Intune Dynamic Device Groups Microsoft Intune is a cloud-based mobile device management (MDM) and enterprise mobility management (EMM) platform that enables IT professionals to manage and secure mobile devices and applications in their organization. One of the key features of Intune is the ability to create dynamic device groups, which allows for more efficient device management. In this blog post, we’ll explore what dynamic device groups are and how they can be used in Intune. ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:0:0","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"What are Dynamic Device Groups? Dynamic device groups in Intune are groups that automatically update their membership based on predefined criteria. This means that the group membership is dynamic and can change over time, based on factors such as device properties, user attributes, or other criteria. Dynamic device groups can be created for a variety of purposes, such as: Targeting policies: Dynamic device groups can be used to target policies to specific devices or groups of devices based on their properties, such as the device model, operating system version, or device compliance status. Deploying applications: Dynamic device groups can be used to deploy applications to specific devices or groups of devices based on their properties, such as the device model, operating system version, or device compliance status. Reporting and monitoring: Dynamic device groups can be used to monitor and report on the status of devices within the group, such as the number of compliant devices, the number of non-compliant devices, and the number of devices that require attention. ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:1:0","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"How to Create Dynamic Device Groups in Intune To create a dynamic device group in Intune, follow these steps: Log in to the Intune console and navigate to the Devices blade. Click on the Device groups tab and then click on the New Group button. Choose the type of group you want to create (in this case, a dynamic device group). Define the criteria for the group membership, such as device properties, user attributes, or other criteria. Give the group a name and a description, and then click on the Create button to create the group. Once the group is created, it will automatically update its membership based on the criteria defined in step 4. This means that devices that meet the criteria will be added to the group, while devices that no longer meet the criteria will be removed from the group. ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:2:0","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"Examples ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:3:0","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"Windows 10 Corporate Devices (device.deviceOSType -startsWith \"Windows\") and (device.deviceOSVersion -startsWith \"10.0\") and (device.deviceOwnership -eq \"Company\") (device.deviceOSVersion -startsWith \"10.0\") and (device.deviceOSType -startsWith \"Windows\") and (device.managementType -eq \"MDM\") ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:3:1","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"iOS BYOD Devices (device.deviceOwnership -eq \"Personal\") and (device.deviceOSType -eq \"iPhone\") or (device.deviceOSType -eq \"iPad\") and (device.deviceOwnership -eq \"Personal\") ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:3:2","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"iOS Corporate Devices (device.deviceOwnership -eq \"Company\") and (device.deviceOSType -eq \"iPhone\") or (device.deviceOSType -eq \"iPad\") and (device.deviceOwnership -eq \"Company\") ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:3:3","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"DEP devices using a profile named ‘DEP devices’ (device.enrollmentProfileName -eq \"DEP devices\") ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:3:4","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"Android Personal devices (device.deviceOSType -contains \"AndroidForWork\") and (device.deviceOwnership -eq \"Personal\") and (device.managementType -eq \"MDM\") ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:3:5","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"Android Enterprise devices (device.deviceOSType -contains \"AndroidEnterprise\") ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:3:6","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"Android Enterprise corporate-owned dedicated devices using a profile named ‘Dedicated Android’ (device.enrollmentProfileName -match \"Dedicated Android\") ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:3:7","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"Corporate-owned Android Enterprise devices (device.deviceOSType -contains \"AndroidEnterprise\") and (device.deviceOwnership -eq \"Company\") and (device.enrollmentProfileName -eq null) ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:3:8","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"Corporate-owned Google Pixel devices device.deviceManufacturer -eq \"Google\") -and (device.deviceModel -contains \"Pixel\") -and (device.deviceOwnership -eq \"Company\") ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:3:9","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["Intune"],"content":"Conclusion Dynamic device groups in Intune are a powerful tool that allows IT professionals to efficiently manage and secure mobile devices in their organization. By automating the group membership based on predefined criteria, IT professionals can target policies, deploy applications, and monitor device status more efficiently. With dynamic device groups, IT professionals can save time and reduce the risk of errors, resulting in a more secure and efficient mobile device management environment. ","date":"26-03-2023","objectID":"/intune_dynamic_device_groups/:4:0","tags":["Intune"],"title":"Intune Dynamic Device Groups","uri":"/intune_dynamic_device_groups/"},{"categories":["MDT"],"content":"MDT Pause Task Sequence Microsoft Deployment Toolkit (MDT) is a popular tool used by IT professionals to automate the deployment of Windows operating systems and applications. One of the key features of MDT is the ability to pause a task sequence, which can be useful for troubleshooting or making manual changes during the deployment process. In this blog post, we’ll explore how to pause a task sequence in MDT. ","date":"18-03-2023","objectID":"/mdt_pause_task_sequence/:0:0","tags":["MDT"],"title":"MDT Pause Task Sequence","uri":"/mdt_pause_task_sequence/"},{"categories":["MDT"],"content":"What is a Task Sequence in MDT? A task sequence in MDT is a set of instructions that define the steps involved in deploying Windows to a device. It includes the necessary configuration settings, applications, drivers, and scripts to automate the deployment process. A task sequence can be customized to suit the needs of a specific deployment, making it a powerful tool for IT professionals. ","date":"18-03-2023","objectID":"/mdt_pause_task_sequence/:1:0","tags":["MDT"],"title":"MDT Pause Task Sequence","uri":"/mdt_pause_task_sequence/"},{"categories":["MDT"],"content":"What is Pausing a Task Sequence? Pausing a task sequence in MDT is the process of temporarily stopping the deployment process to allow for troubleshooting or manual intervention. This can be useful when there is an error or issue that needs to be addressed before continuing with the deployment process. How to Pause a Task Sequence in MDT To pause a task sequence in MDT, follow these steps: Open the MDT Deployment Workbench and navigate to the task sequence you want to pause. Right-click on the task sequence and select Properties. Click on the Task Sequence tab and then click on the Add button. Choose General, and then select Run Command Line. In the Command line field, type the following command: cmd.exe /c echo “Pause Task Sequence for Troubleshooting” » Pause.txt Give the step a descriptive name, such as “Pause Task Sequence for Troubleshooting.” Click on the Task Sequence tab and then click on the Add button. Choose General, and then select Run Command Line. In the Command line field, type the following command: cmd.exe /c notepad.exe Pause.txt Click OK to save the step, and then click OK again to save the task sequence properties. Now, when the task sequence is deployed, it will pause at the step you added. This will allow you to troubleshoot any issues or make manual changes before continuing with the deployment process. ","date":"18-03-2023","objectID":"/mdt_pause_task_sequence/:2:0","tags":["MDT"],"title":"MDT Pause Task Sequence","uri":"/mdt_pause_task_sequence/"},{"categories":["MDT"],"content":"Conclusion Pausing a task sequence in MDT is a simple process that can be useful for troubleshooting or making manual changes during the deployment process. By following the steps outlined above, IT professionals can pause a task sequence in MDT and ensure a successful deployment. With MDT’s powerful automation tools and the ability to pause task sequences, IT professionals can save time and reduce the risk of errors, resulting in a more efficient and secure deployment environment. ","date":"18-03-2023","objectID":"/mdt_pause_task_sequence/:3:0","tags":["MDT"],"title":"MDT Pause Task Sequence","uri":"/mdt_pause_task_sequence/"},{"categories":["AVD"],"content":"Azure Virtual Desktop Pin Connection Bar PinConnectionBar is a feature in Remote Desktop Services (RDS) that allows users to pin the Remote Desktop Connection bar to the top of the screen, providing quick and easy access to the most commonly used RDS features. In this blog post, we’ll explore what PinConnectionBar is, how it works, and how to enable it in RDS. ","date":"11-03-2023","objectID":"/avd_pin_connection_bar/:0:0","tags":["AVD"],"title":"AVD Pin Connection Bar","uri":"/avd_pin_connection_bar/"},{"categories":["AVD"],"content":"What is PinConnectionBar in AVD? PinConnectionBar is a feature in RDS that allows users to pin the Remote Desktop Connection bar to the top of the screen, providing quick and easy access to the most commonly used RDS features. This feature is especially useful for users who frequently switch between multiple RDS sessions, as it provides a consistent and easy-to-access interface. ","date":"11-03-2023","objectID":"/avd_pin_connection_bar/:1:0","tags":["AVD"],"title":"AVD Pin Connection Bar","uri":"/avd_pin_connection_bar/"},{"categories":["AVD"],"content":"How does PinConnectionBar work in AVD? PinConnectionBar works by allowing users to pin the Remote Desktop Connection bar to the top of the screen. Once pinned, the Connection bar stays visible, even when the RDS session is in full-screen mode. This provides easy access to features such as disconnecting from the RDS session, accessing the Remote Desktop Connection settings, and more. How to enable PinConnectionBar in RDS ","date":"11-03-2023","objectID":"/avd_pin_connection_bar/:2:0","tags":["AVD"],"title":"AVD Pin Connection Bar","uri":"/avd_pin_connection_bar/"},{"categories":["AVD"],"content":"Values Explanation 0 The connection bar should not be pinned to the top of the remote session. 1 The connection bar should be pinned to the top of the remote session. To enable PinConnectionBar in RDS, follow these steps: Option 1 : Open the Remote Desktop Connection app on your client computer. Click on the Show Options button. Click on the Display tab. Check the box next to “Pin the connection bar to the top of the screen.” Click on the Connect button to connect to your RDS session. Option 2 : Add Value to Registry Open the Registry Editor on your client computer In HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client add a DWORD value PinConnectionBar Set registry key value - 1 The connection bar should be pinned to the top of the remote session. Option 3 : Edit the RDP file Open the .RDP file with Notepad++ Add a line with the following syntax - pinconnectionbar:i: Set Value - 1 Once connected, the Connection bar will be pinned to the top of the screen, providing easy access to the most commonly used RDS features. ","date":"11-03-2023","objectID":"/avd_pin_connection_bar/:2:1","tags":["AVD"],"title":"AVD Pin Connection Bar","uri":"/avd_pin_connection_bar/"},{"categories":["AVD"],"content":"Conclusion PinConnectionBar is a useful feature in RDS that allows users to pin the Remote Desktop Connection bar to the top of the screen, providing quick and easy access to the most commonly used RDS features. By following the steps outlined above, users can easily enable PinConnectionBar in RDS and improve their productivity by streamlining the RDS workflow. With PinConnectionBar, RDS users can quickly and easily switch between multiple sessions and access important features with ease. ","date":"11-03-2023","objectID":"/avd_pin_connection_bar/:3:0","tags":["AVD"],"title":"AVD Pin Connection Bar","uri":"/avd_pin_connection_bar/"},{"categories":["Intune"],"content":"Intune Application Detection Scripts Intune Application Detection Scripts are a powerful feature that allow IT professionals to detect and install applications on managed devices using custom scripts. In this blog post, we’ll explore what Intune Application Detection Scripts are, how they work, and how to use them to detect and install applications on managed devices. ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:0:0","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"What are Intune Application Detection Scripts? Intune Application Detection Scripts are custom scripts that can be used to detect whether an application is installed on a managed device. These scripts can be used in combination with Intune application deployment policies to automatically install applications on managed devices if they are not already installed. This feature is particularly useful for organizations that need to deploy applications to a large number of devices quickly and efficiently. ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:1:0","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"How do Intune Application Detection Scripts work? Intune Application Detection Scripts work by executing a custom script on a managed device to detect whether a specific application is installed. This script can be written in PowerShell, VBScript, or any other scripting language that is supported by Windows. Once the script is executed, the results are sent back to the Intune management console, which then determines whether the application needs to be installed or not. ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:2:0","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"Examples ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:3:0","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"A basic file check $File = \"C:\\windows\\system32\\notepad.exe\" if (Test-Path $File) { write-output \"Notepad detected, exiting\" exit 0 } else { exit 1 } ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:3:1","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"A registry key (checking both it exists and the value is correct, good for versioning) $Path = \"HKLM:\\SOFTWARE\\7-Zip\" $Name = \"Path\" $Type = \"STRING\" $Value = \"C:\\Program Files\\7-Zip\\\" Try { $Registry = Get-ItemProperty -Path $Path -Name $Name -ErrorAction Stop | Select-Object -ExpandProperty $Name If ($Registry -eq $Value){ Write-Output \"Detected\" Exit 0 } Exit 1 } Catch { Exit 1 } ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:3:2","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"Check if a service exists $service = get-service -name \"MozillaMaintenance\" if ($service) { write-output \"MozillaMaintenance detected, exiting\" exit 0 } else { exit 1 } ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:3:3","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"Service exists and is running $service = get-service -name \"MozillaMaintenance\" if ($service.Status -eq \"Running\") { write-output \"MozillaMaintenance detected and running, exiting\" exit 0 } else { exit 1 } ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:3:4","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"Both file and service exist $File = \"C:\\windows\\system32\\notepad.exe\" $service = get-service -name \"MozillaMaintenance\" if (($service) -and (Test-Path $File)) { write-output \"MozillaMaintenance and Notepad detected, exiting\" exit 0 } else { exit 1 } ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:3:5","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"File is of a certain version $fileversion = (Get-Command C:\\Windows\\System32\\notepad.exe).Version $build = 19041 $detectedbuild = $fileversion.Build if ($detectedbuild -eq $build) { write-output \"Detected\" exit 0 } else { exit 1 } ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:3:6","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"Or even the file was last modified today $filedate = (Get-Item C:\\Windows\\System32\\notepad.exe).LastWriteTime if ($filedate -gt (Get-Date).AddDays(-1)) { write-output \"Detected\" exit 0 } else { exit 1 } ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:3:7","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"File is of a certain version $fileversion = (Get-Command C:\\ClickShareApp\\ClickShare\\ClickShare_native.exe).FileVersionInfo $build = \"4.27.2.4\" $detectedbuild = $fileversion.productversion if ($detectedbuild -eq $build) { write-output \"Detected\" exit 0 } else { exit 1 } ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:3:8","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"Version Check $APPINSTALL = Get-ItemProperty “HKLM:\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*” | where {$_.DisplayName -like “*APPNAME*”} IF(Test-Path “$APPINSTALL .PSPath”) { IF($APPINSTALL .DisplayVersion -ge “3.0.279”) { write-host “Install Success” exit 0 } ELSE { Write-Host “Installed Version Not Match, Upgrade Failed” exit 1 } } ELSEIF(!(Test-Path “$APPINSTALL .PSPath”)) { Write-Host “Install failed!” exit 1 } ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:3:9","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Intune"],"content":"Conclusion Intune Application Detection Scripts are a powerful feature that can save IT professionals time and effort when deploying applications to managed devices. By following the steps outlined above, organizations can easily detect and install applications on managed devices using custom scripts. With Intune Application Detection Scripts, IT professionals can ensure that all managed devices have the necessary applications installed, improving productivity and efficiency across the organization. ","date":"04-03-2023","objectID":"/intune_app_dectection_script/:4:0","tags":["Intune"],"title":"Intune App Dectection Script","uri":"/intune_app_dectection_script/"},{"categories":["Liquit"],"content":"Liquit Context Filters Liquit Context is a powerful feature that allows organizations to manage and configure their IT environments based on a range of different contexts. In this blog post, we’ll explore what Liquit Context is, how it works, and why it’s important for modern IT environments. ","date":"25-02-2023","objectID":"/liquit_context_filters/:0:0","tags":["Liquit"],"title":"Liquit Context Filters","uri":"/liquit_context_filters/"},{"categories":["Liquit"],"content":"What is Liquit Context? Liquit Context is a feature of the Liquit Workspace solution that allows organizations to manage their IT environments based on a range of different contexts, such as user, device, location, and more. This means that IT administrators can tailor their IT environments to the specific needs of different users and devices, making it easier to manage and secure their IT infrastructure. ","date":"25-02-2023","objectID":"/liquit_context_filters/:1:0","tags":["Liquit"],"title":"Liquit Context Filters","uri":"/liquit_context_filters/"},{"categories":["Liquit"],"content":"How does Liquit Context work? Liquit Context works by allowing IT administrators to define rules and policies that are based on different contexts. For example, an IT administrator might create a policy that specifies that certain applications are only available to users who are logged in from a specific location or device. This policy could then be automatically applied to all users who meet the specified context criteria, ensuring that the IT environment is configured correctly for each user. Liquit Context also allows for real-time updating of policies based on changing contexts. For example, if a user changes devices, their policy will be updated to reflect the new device, ensuring that their IT environment remains consistent and secure. ","date":"25-02-2023","objectID":"/liquit_context_filters/:2:0","tags":["Liquit"],"title":"Liquit Context Filters","uri":"/liquit_context_filters/"},{"categories":["Liquit"],"content":"Why is Liquit Context important? Liquit Context is important for modern IT environments because it allows IT administrators to manage and configure their IT environments in a way that is tailored to the specific needs of different users and devices. This can help to improve security and reduce the risk of data breaches by ensuring that users only have access to the applications and data that they need to perform their jobs. Liquit Context also helps to improve productivity by ensuring that users have access to the applications and data that they need, when and where they need it. This can help to reduce the amount of time that users spend looking for the resources they need, and can help to improve collaboration and communication within teams. ","date":"25-02-2023","objectID":"/liquit_context_filters/:3:0","tags":["Liquit"],"title":"Liquit Context Filters","uri":"/liquit_context_filters/"},{"categories":["Liquit"],"content":"Examples ","date":"25-02-2023","objectID":"/liquit_context_filters/:4:0","tags":["Liquit"],"title":"Liquit Context Filters","uri":"/liquit_context_filters/"},{"categories":["Liquit"],"content":"Windows 10 Physical Devices ","date":"25-02-2023","objectID":"/liquit_context_filters/:4:1","tags":["Liquit"],"title":"Liquit Context Filters","uri":"/liquit_context_filters/"},{"categories":["Liquit"],"content":"Windows 11 Physical Devices ","date":"25-02-2023","objectID":"/liquit_context_filters/:4:2","tags":["Liquit"],"title":"Liquit Context Filters","uri":"/liquit_context_filters/"},{"categories":["Liquit"],"content":"Windows Physical Devices ","date":"25-02-2023","objectID":"/liquit_context_filters/:4:3","tags":["Liquit"],"title":"Liquit Context Filters","uri":"/liquit_context_filters/"},{"categories":["Liquit"],"content":"Conclusion Liquit Context is a powerful feature that can help organizations to manage and configure their IT environments in a way that is tailored to the specific needs of different users and devices. ","date":"25-02-2023","objectID":"/liquit_context_filters/:5:0","tags":["Liquit"],"title":"Liquit Context Filters","uri":"/liquit_context_filters/"},{"categories":["MDT"],"content":"MDT Task Sequence Variables passthru Powershell MDT Task Sequence Variables are an important component of the MDT (Microsoft Deployment Toolkit) task sequence. They allow administrators to configure and customize the deployment process based on a range of different variables, such as the computer model, the operating system, and more. In this blog post, we’ll explore how MDT Task Sequence Variables can be used as scripts to further customize and automate the deployment process. What are MDT Task Sequence Variables? MDT Task Sequence Variables are variables that can be used to configure and customize the deployment process in MDT. These variables are defined in the task sequence itself and can be used to perform a range of different actions, such as installing applications, configuring settings, and more. Some examples of MDT Task Sequence Variables include: %Model%: Specifies the computer model being deployed. %OSDComputerName%: Specifies the name of the computer being deployed. %OSDDomainName%: Specifies the name of the domain being joined. %OSDInstallLanguage%: Specifies the language used for the installation. ","date":"18-02-2023","objectID":"/mdt_task_sequence_variables_powershell/:0:0","tags":["MDT"],"title":"MDT Task Sequence Variables Powershell","uri":"/mdt_task_sequence_variables_powershell/"},{"categories":["MDT"],"content":"How can MDT Task Sequence Variables be used as scripts? Using Task Sequence variables in a running Task Sequence by script. The first step is to create an instance of Microsoft.SMS.TSEnvironment. As this is a COM automation object. In the following code example all Task sequence variables are being passthru to powershell to backup the autopilot csv file to a share on the MDT server. $SRV = Servername of MDT server $share = Share where autopilot backup files are placed $clabel = Customer label, abbreviation of customer name # Create an object to access the task sequence environment $tsenv = New-Object -ComObject Microsoft.SMS.TSEnvironment # Convert all of the variables currently in the environment to PowerShell variables $tsenv.GetVariables() | % { Set-Variable -Name \"$_\" -Value \"$($tsenv.Value($_))\" } \u0026 $DEPLOYROOT\\applications\\get-windowsautopilotinfo\\Get-WindowsAutoPilotInfo.ps1 -OutputFile \"\\\\$SRV\\$share\\$clabel\\$env:COMPUTERNAME.csv\" -GroupTag \"$OrderIdentifier\" Conclusion MDT Task Sequence Variables are a powerful tool for customizing and automating the deployment process in MDT. By using these variables as scripts, administrators can further customize the deployment process based on a range of different variables, making it easier to deploy and manage Windows operating systems and applications. With the ability to automate complex tasks, administrators can save time and ensure consistent and accurate deployments across their organization. ","date":"18-02-2023","objectID":"/mdt_task_sequence_variables_powershell/:1:0","tags":["MDT"],"title":"MDT Task Sequence Variables Powershell","uri":"/mdt_task_sequence_variables_powershell/"},{"categories":["AVD"],"content":"If you are working with Azure virtual machines, you may need to find the SKU (stock-keeping unit) of the images you want to use. The SKU is an important parameter because it determines the size, capacity, and capabilities of the virtual machine. To find the SKUs of Azure VM images, you can use PowerShell, a command-line interface that allows you to manage Azure resources. Here is a step-by-step guide on how to find the SKUs of Azure VM images using PowerShell. Step 1: Open PowerShell First, open PowerShell by clicking the Windows Start button and typing “PowerShell” in the search bar. Then, click on the Windows PowerShell app to open it. Step 2: Connect to Azure Next, you need to connect to your Azure account using PowerShell. To do this, type the following command in the PowerShell window: Connect-AzAccount This will prompt you to sign in to your Azure account. Once you have signed in, you can proceed to the next step. Step 3: Find the VM image To find the SKU of an Azure VM image, you need to use the Get-AzVMImageSku cmdlet. This cmdlet retrieves the list of SKUs for a given image publisher, offer, and SKU name. To use this cmdlet, you need to provide the following parameters: Publisher: The name of the image publisher. Offer: The name of the image offer. Skus: The name of the SKU. For example, to find the SKUs for the Windows 10 AVD image, you would use the following command: Get-AzLocation | select location,displayname $locName = \"West Europe\" Get-AzVMImagePublisher -Location $locName | where-object {$_.PublisherName -like \"*windows*\"} | ft PublisherName,Location $pubName=\"MicrosoftWindowsDesktop\" Get-AzVMImageOffer -Location $locName -PublisherName $pubName | ft Offer,PublisherName,Location $offerName=\"Windows-10\" get-azvmimagesku -Location $locName -PublisherName $pubName -Offer $offerName | ft Skus,Offer,PublisherName,Location $skuName=\"win10-22h2-avd-g2\" Get-AzVMImage -Location $locName -PublisherName $pubName -Skus $skuName -Offer $offerName This command will return a list of SKUs for the Windows 10 AVD image, along with their properties. Conclusion Finding the SKUs of Azure VM images is an important task if you want to create virtual machines with the right size and capacity. Using PowerShell, you can easily retrieve the SKUs for a given image publisher, offer, and SKU name. By filtering the results based on specific criteria, you can narrow down the list of SKUs to find the one that best meets your needs. ","date":"12-02-2023","objectID":"/avd_finding_azure_vm_sku_powershell/:0:0","tags":["AVD"],"title":"AVD Finding Azure VM SKU Powershell","uri":"/avd_finding_azure_vm_sku_powershell/"},{"categories":["AVD"],"content":"AVD RDP Properties Azure Virtual Desktop (formerly known as Windows Virtual Desktop) is a powerful cloud-based desktop and application virtualization service that allows you to deploy and manage virtual desktops and apps on Azure. One of the key features of Azure Virtual Desktop is the ability to customize the RDP (Remote Desktop Protocol) properties of your virtual machines to improve performance and user experience. In this blog post, we’ll explore some of the RDP properties you can configure in Azure Virtual Desktop. ","date":"05-02-2023","objectID":"/avd_rdp_properties/:0:0","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Connection information The connection information tab is the first of five to define the RDP properties for the Host Pool. Let me quickly explain you the different values: ","date":"05-02-2023","objectID":"/avd_rdp_properties/:1:0","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Credential Security Support Provider (CredSSP): Identifies whether Remote Desktop will use CredSSP for authentication if it´s available. For those of you, which doesn´t know what CredSSP is, it can be generally explained as Security Provider that will be used by the Support provider Interface. It helps an application “Remote Desktop Client” e.g. to delegate the user´s credentials from the client to the target server for remote authentication. Manual setting value: enablecredsspsupport:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:1:1","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Reconnection settings: This setting helps administrators to let their users reconnect to their existing session if the session reaches the state disconnected. This can happen when a user logs off or is just closing the window. If you want your users to get a new session, select “initiate a new connection”. Manual setting value: disableconnectionsharing:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:1:2","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Alternate Shell (Path): This setting defines a program to be started automatically ones a new user session has been initiated. It makes sense if you want to enforce a user to use a specific app at the start-up without linking an app to the user´s start-up folder. The path to that application must be defined as local path “C:\\ProgramFiles\\Office\\word.exe” e.g.. Manual setting value: alternate shell:s:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:1:3","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Session behaviour ","date":"05-02-2023","objectID":"/avd_rdp_properties/:2:0","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Reconnection: Defines, if a client should try to reconnect to a user´s session if the connection gets lost. This can happen when the internet connection is lost, or if there a any other unforeseeable reasons on a network level. You can choose whether you want to PREVENT or ALLOW a client to re-establish a connection. Recommended: Client automatically tries to reconnect. Manual setting value: autoreconnection enabled:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:2:1","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Bandwidth auto detect: Determines whether automatic network type detection is enabled or disabled. It helps to identify the currently available bandwidth. This setting correlates with the next setting “Network Auto Detect” Recommended: Enable automatic network type detection Manual setting value: bandwidthautodetect:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:2:2","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Network auto detect: Determines whether to use automatic network bandwidth detection or not. Requires the previous option to be set. Attention: Connection type 7 is required. Generally, these settings can be defined as well in a RDP file. We distinguish between the following modes on-premises: 1 – Modem (56 Kbps). 2 – Low-speed broadband (256 Kbps – 2 Mbps). 3 – Satellite (2 Mbps – 16 Mbps with high latency). 4 – High-speed broadband (2 Mbps – 10 Mbps). 5 – WAN (10 Mbps or higher with high latency). 6 – LAN (10 Mbps or higher). 7 – Automatic bandwidth detection – REQUIRES bandwidthautodetect The setting itself, doesn´t do anything, when set. It becomes active, when select in the RDC GUI and changes automatically several performance related settings such as: Themes, Font Smoothing, Aminations etc. Recommended: Use automatic network bandwidth detection. Manual setting value: networkautodetect:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:2:3","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Compression: Determines whether bulk compression is enabled when it is transmitted by RDP to the local computer. This setting was first introduced in the RDP6 protocol and has helped in reducing the RDP network bandwidth significantly. In some cases you might want to disable this setting, as there are already mechanisms by your network vendors (e.g. Cisco Wide Area Application Services), where compression occurs problems. This must be identified together with your networking team. Recommendation: Enable RDP bulk compression. Manual setting value: compression:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:2:4","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Video playback: Determines if the connection will use RDP-efficient multimedia streaming for video playback. This setting has been first introduced in July 2009, where improvements have been made to optimize the overall video playback experience for Win7 and Win2008 R2 servers. Technically it means, that the client (endpoint) will receive the original compressed multimedia stream from the RDP server / WVD Session Host and decode it on the local hardware for displaying. This is also an improvement of the network bandwidth, as the data will be received compressed on the endpoint. Recommendation: Use RDP-efficient multimedia streaming for video playback when possible. Manual setting value: videoplaybackmode:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:2:5","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Device redirection ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:0","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Microphone redirection: Lets you decide if you want to redirect audio capturing devices from you local endpoint to the remote session. Required for video conferencing tools as Webcams with Mics and other microphones will not work. Recommendation: Enable audio capture from the local device and redirection to an audio application in the remote session Manual setting value: audiocapturemode:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:1","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Redirect video encoding: Enables or disables the video encoding on the local endpoint for the RDP session. Recommendation: Enable encoding of redirected video. Manual setting value: encode redirected video capture:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:2","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Encoded video quality: Helps to define how much a video will be compressed for the remote session. You have the following options with the impacts: Manual setting value: encode redirected video capture encoding quality:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:3","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Audio output location: Defines, where audio will be played while being connected to the remote session. You can decide between the following options: Recommendation: Play sounds on the local computer Manual setting value: audiomode:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:4","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Camera redirection: Helps to define, if cameras / webcams can be redirected to the remote session from the local endpoint. You can redirect all cameras, or define manually a list of cameras to be redirected. Important! The redirection of the camera is mandatory for the usage of video conferencing tools such as Teams. Recommendation (simplified): Redirect cameras. Manual setting value: camerastoredirect:s:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:5","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"USB device redirection: Helps to define, if and which USB devices shall be redirected to the remote session host from the local endpoint. You can define, whether you want to decline any redirected USB devices, redirect all supported drives including later connected ones or to manually enter the list of USB devices while using the hardware ID. Recommendation (simplified): Redirect all USB drives Attention! Redirecting all USB drives is just a very simplified option! For security I don´t recommend this setting as any foreign USB key with potential malware on it can be plugged and being redirected to the remote session. Please evaluate this setting from case to case! Manual setting value: devicestoredirect:s:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:6","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Drive/storage redirection: Determines, which local drives shall be redirected to the remote session. The following options are available: The options are nearly self-explaining. You can decide to redirect all drives, also those attached at a later time. You allow only drives, connected after the remote session has been established, or you define manually the drives and labels to be redirected. Recommendation: Depends on the security needs! Be aware that redirecting all drives is a potential security risk for your environment. If you want to manually allow the redirection, you can define this by defining the drive letter e.g.: Manual setting value: drivestoredirect:s:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:7","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Clipboard redirection: Determines if the local clipboard from the local endpoint shall be redirected to the remote session. You can define if you want to allow it or block it. Recommendation: Depends on the security you want to provide. If somebody writes her / his password in cleartext in a text field and just copies it, it could be potentially captured. Be cautious! Manual setting value: redirectclipboard:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:8","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"COM ports redirection: Determines if you want to redirect serial connections from your local endpoint to the remote session. Might be useable for legacy devices. Recommendations: COM ports are not available in the remote session. Depends on the case. Manual setting value: redirectcomports:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:9","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Printer redirection: This setting lets the local printers being redirected to the remote session from the local endpoint. This might be helpful for your end-users in home office scenarios, where printing is essential. You can decide whether you want to allow or decline the connection. Recommendation: Depends on the security. Printing out confidential documents might be a potential risk. This can also be protected by Windows security mechanisms like Information Protection, but if those features are not in place, printing could be declined. Manual setting value: redirectprinters:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:10","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Smart card redirection: Determines, whether you want to allow Smartcard redirection or not. Smartcards generally help to authenticate against a specific service. This can be useful especially for Middleware’s connecting to financial software, or the local authentication on the Session host. Recommendation: The smart card device on the local computer is available in the remote session. Manual setting value: redirectsmartcards:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:11","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"USB redirection: Helps to define more granularly, which kind and type of USB device shall be redirected to the remote session. Compared to the other settings above, you can decide to allow or decline the following settings: Manual setting value: usbdevicestoredirect:s:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:3:12","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Display settings ","date":"05-02-2023","objectID":"/avd_rdp_properties/:4:0","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Multiple displays: Determines if the remote session supports all displays or just a single display. If Enabled, you can select, whether all monitors should be used by default, or if you want to enter a list of display IDs to allow only these monitors. Additionally, you can define the maximizing behavior for these screens, as well as a Multi to single display switch, which helps to switch from a multi-screen to single screen, when the full screen mode has been ended. Recommendation: Enable multiple display support Manual setting value: use multimon:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:4:1","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Screen mode: Determines whether the remote session will appear in a windowed or full screen mode. Recommendation: The remote session will appear full screen. Manual setting value: screen mode id:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:4:2","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Smart sizing: Helps to scale the remote content in the remote session to fit to the size of the monitor. This will automatically adapt the resolution on the remote host. You can decide if you want to allow the scaling in case of resizing or not. Recommendation: The local window content will scale when resized. Manual setting value: smart sizing:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:4:3","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Dynamic resolution: Will define if the remote resolution will be adopted automatically, when sizing occurs. You can define if you want to keep the same resolution even if the size changes, or you can select a resolution update to the local windows resize and define the scaling factors: Recommendation: Session resolution updates as the local window resizes. Manual setting value: dynamic resolution:i:value desktop size id:i:value | desktopheight:i:value | desktopwidth:i:value | desktopscalefactor:i:value ","date":"05-02-2023","objectID":"/avd_rdp_properties/:4:4","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"Advanced The advanced tab represents the option previously available, where you can define all the settings mentioned above while using the parameters. All available parameters are available from the official Microsoft page. Conclusion Customizing the RDP properties of your Azure Virtual Desktop virtual machines can help you optimize performance and user experience. By using PowerShell commands, you can easily configure RDP properties such as audio quality, bitmap caching, device redirection, clipboard redirection, and printer redirection. By fine-tuning these settings, you can create a virtual desktop environment that meets your specific needs and requirements. ","date":"05-02-2023","objectID":"/avd_rdp_properties/:5:0","tags":["AVD"],"title":"AVD RDP Properties","uri":"/avd_rdp_properties/"},{"categories":["AVD"],"content":"How to hide a drive using Registry Hide a particular drive on your computer using the Registry. Use the Windows key + R keyboard shortcut to open the Run command. Type regedit, and click OK to open the registry. Browse the following path:HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\ Explorer Right-click on the right side, select New, and click on DWORD (32-bit) Value. Name the new DWORD NoDrives and press Enter. Double-click the newly created DWORD. Under “Base,” select the Decimal option. On “Value data” enter the decimal number that represents the drive letter you want to hide. In this blog post, we’ll be using value 32, because we’re hiding the F: drive. If you want to hide multiple drives, you’ll need to add the decimal numbers. For example, if you’re trying to hide drive A:, B: , C: , D: , E: and F:, you’ll need to add 1 + 2 + 4 + 8 + 16 + 32, which means that the value you need to enter is 63. These decimal numbers as reference to hide specific drives: A: 1 B: 2 C: 4 D: 8 E: 16 F: 32 G: 64 H: 128 I: 256 J: 512 K: 1024 L: 2048 M: 4096 N: 8192 O: 16384 P: 32768 Q: 65536 R: 131072 S: 262144 T: 524288 U: 1048576 V: 2097152 W: 4194304 X: 8388608 Y: 16777216 Z: 33554432 ALL: 67108863 ","date":"22-11-2022","objectID":"/avd_registry_gpo_hide_drives/:1:0","tags":["AVD , GPO"],"title":"AVD Registry GPO Hide Drives","uri":"/avd_registry_gpo_hide_drives/"},{"categories":["Azure"],"content":"Changing the Time Zone of Azure VMs When you create a VM in Azure it’s always set to the UTC timezone. There are some times when that doesn’t work and it needs to be set for a specific time zone The standard process to change the timezone for a Windows server doesn’t work as expected. You can change the time zone by right-clicking on the clock and selecting “Adjust Date and Time”. If you change the time zone here, it doesn’t actually do anything. It may also change for a short period of time and then revert back to UTC. If you use PowerShell to change the timezone the change will work, even if the VM is deallocated and reallocated. \\ ","date":"22-11-2022","objectID":"/azure_vm_timezone/:1:0","tags":["Azure"],"title":"Azure VM TimeZone","uri":"/azure_vm_timezone/"},{"categories":["Azure"],"content":"Step 1 : See what timzones are available Get-TimeZone -ListAvailable The list of every time zone possible is very long, you can filter the list down as you probably know the name of the time zone you’re looking for. In most of my cases the server is created in the Europe Time Zone, So I filtered it down by the word Europe. \\ ","date":"22-11-2022","objectID":"/azure_vm_timezone/:1:1","tags":["Azure"],"title":"Azure VM TimeZone","uri":"/azure_vm_timezone/"},{"categories":["Azure"],"content":"Step 2 : Narrow down timezones Get-TimeZone -ListAvailable | where ({$_.Id -like \"*europe*\"}) ","date":"22-11-2022","objectID":"/azure_vm_timezone/:1:2","tags":["Azure"],"title":"Azure VM TimeZone","uri":"/azure_vm_timezone/"},{"categories":["Azure"],"content":"Step 3 : Set the new timezone Use the cmdlet Set-TimeZone to change the time zone of the VM. Use the “Id” to set the timezone of your choice. Set-TimeZone -Id \"W. Europe Standard Time\" ","date":"22-11-2022","objectID":"/azure_vm_timezone/:1:3","tags":["Azure"],"title":"Azure VM TimeZone","uri":"/azure_vm_timezone/"},{"categories":["MDT"],"content":"Update MDT with Windows 11 22H2 ADK Download the Windows 11 ADK version 22H2 at the following link Windows 11 ADK 22H2 The biggest change is it has no more 32 bit x86 support, that means the ADK no longer contains the 32 bit x86 version of Windows PE. MMC Error After updating to the windows 11 22H2 ADK the MDT console crashes when opening the Windows PE tab of the deploytment share settings. To fix this error we need to create a folder MkDir \"C:\\Program Files (x86)\\Windows Kits\\10\\Assessment and Deployment Kit\\Windows Preinstallation Environment\\x86\\WinPE_OCs\" HTA applications report Script error After updating the boot image, and booting into the Lite Touch x64 boot image another error is generated. To resolve this error we need to edit the Unattend_PE_x64.xml HTA applications rely on MSHTML and starting with Windows 11, version 22H2, the default legacy scripting engine was changed. To work around this issue you need to add the following registry value in WinPE: reg.exe add \"HKLM\\Software\\Microsoft\\Internet Explorer\\Main\" /t REG_DWORD /v JscriptReplacement /d 0 /f To enable this change in MDT, we recommend that you back up the following file: C:\\Program Files\\Microsoft Deployment Toolkit\\Templates\\Unattend_PE_x64.xml and to modify it as follows: \u003cunattend xmlns=\"urn:schemas-microsoft-com:unattend\"\u003e \u003csettings pass=\"windowsPE\"\u003e \u003ccomponent name=\"Microsoft-Windows-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" xmlns:wcm=\"http://schemas.microsoft.com/WMIConfig/2002/State\"\u003e \u003cDisplay\u003e \u003cColorDepth\u003e32\u003c/ColorDepth\u003e \u003cHorizontalResolution\u003e1024\u003c/HorizontalResolution\u003e \u003cRefreshRate\u003e60\u003c/RefreshRate\u003e \u003cVerticalResolution\u003e768\u003c/VerticalResolution\u003e \u003c/Display\u003e \u003cRunSynchronous\u003e \u003cRunSynchronousCommand wcm:action=\"add\"\u003e \u003cDescription\u003eLite Touch PE\u003c/Description\u003e \u003cOrder\u003e1\u003c/Order\u003e \u003cPath\u003ereg.exe add \"HKLM\\Software\\Microsoft\\Internet Explorer\\Main\" /t REG_DWORD /v JscriptReplacement /d 0 /f\u003c/Path\u003e \u003c/RunSynchronousCommand\u003e \u003cRunSynchronousCommand wcm:action=\"add\"\u003e \u003cDescription\u003eLite Touch PE\u003c/Description\u003e \u003cOrder\u003e2\u003c/Order\u003e \u003cPath\u003ewscript.exe X:\\Deploy\\Scripts\\LiteTouch.wsf\u003c/Path\u003e \u003c/RunSynchronousCommand\u003e \u003c/RunSynchronous\u003e \u003c/component\u003e \u003c/settings\u003e \u003c/unattend\u003e WDS multicast stops working After you updated your MDT boot image to ADK for Windows 11 22H2 and you are using multicast popups appear prompting wdscommonlib.dll and imagelib.dll are missing in WinPE. The right way to add WDS multicast to WinPE is to install WinPE-WDS-Tools OC (WinPE optional components) into WinPE. Follow this example to install WinPE-WDS-Tools OC in WinPE (assuming the mount folder E:\\mnt exists). Dism /mount-wim /WimFile:\"E:\\DeploymentShare\\Boot\\LiteTouchPE_multicast_x64.wim\" /Index:1 /MountDir:E:\\mnt Dism /Image:\"E:\\mnt\" /Add-Package /PackagePath:\"C:\\Program Files (x86)\\Windows Kits\\10\\Assessment and Deployment Kit\\Windows Preinstallation Environment\\amd64\\WinPE_OCs\\WinPE-WDS-Tools.cab\" Dism /Image:\"E:\\mnt\" /Add-Package /PackagePath:\"C:\\Program Files (x86)\\Windows Kits\\10\\Assessment and Deployment Kit\\Windows Preinstallation Environment\\amd64\\WinPE_OCs\\en-us\\WinPE-WDS-Tools_en-us.cab\" Dism /Unmount-Wim /MountDir:E:\\mnt /Commit Add or replace the multicast enabled boot image in WDS snap-in for Microsoft Management Console (MMC). ","date":"08-10-2022","objectID":"/windows_11_22h2_adk/:1:0","tags":["MDT"],"title":"Windows 11 22H2 ADK","uri":"/windows_11_22h2_adk/"},{"categories":["MDT"],"content":"The content of this blog was inspirid by the following information Michael Niehaus “Get ready (and get MDT ready) to deploy Windows 11 22H2” Out of Office Hours https://oofhours.com/2022/10/06/get-ready-and-get-mdt-ready-to-deploy-windows-11-22h2/ Johan Arwidmark “Notes from the Lab on Windows ADK for Windows 11 22H2” https://www.deploymentresearch.com/notes-from-the-lab-on-windows-adk-for-windows-11-22h2/ Microsoft “Microsoft Docs memdocs” https://github.com/MicrosoftDocs/memdocs/blob/main/memdocs/configmgr/mdt/known-issues.md ","date":"08-10-2022","objectID":"/windows_11_22h2_adk/:1:1","tags":["MDT"],"title":"Windows 11 22H2 ADK","uri":"/windows_11_22h2_adk/"},{"categories":["AVD"],"content":"How to enable Azure Virtual Desktop Hybrid single sign-on. NOTE : This currently only work for Windows 11 22h2 insider preview build. login into the Azure Portal. Go to Azure Virtual Desktop. Open one of the created hostpools. Select RDP Properties. Configure : RDP will attempt to use Azure AD authentication to sign in Go to the advanced tab. The property that has been added is : enablerdsaadauth:i:1 Configure Azure AD Keberos Azure AD Kerberos # First, ensure TLS 1.2 for PowerShell gallery access. [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12 # Install the Azure AD Kerberos PowerShell Module. Install-Module -Name AzureADHybridAuthenticationManagement -AllowClobber Select one of the example scenarios that fits your organization, is this blog i used example one. # Specify the on-premises Active Directory domain. A new Azure AD # Kerberos Server object will be created in this Active Directory domain. $domain = $env:USERDNSDOMAIN # Enter an Azure Active Directory global administrator username and password. $cloudCred = Get-Credential -Message 'An Active Directory user who is a member of the Global Administrators group for Azure AD.' # Enter a domain administrator username and password. $domainCred = Get-Credential -Message 'An Active Directory user who is a member of the Domain Admins group.' # Create the new Azure AD Kerberos Server object in Active Directory # and then publish it to Azure Active Directory. Set-AzureADKerberosServer -Domain $domain -CloudCredential $cloudCred -DomainCredential $domainCred This script will create a user account and a computer account object in the onprem Active Directory, to redirect all authentication requests over to Azure AD. ","date":"26-08-2022","objectID":"/avd_aad_sso/:1:0","tags":["AVD"],"title":"AVD Azure AD SSO","uri":"/avd_aad_sso/"},{"categories":["MDT"],"content":"How to add steps numbers to an MDT task sequence In order to add steps numbers to the task sequence you will have to modify the ZTIUtility.vbs file. Make a copy of the ZTIUtility.vbs , then in the original ZTIUtility.vbs replace the code mentioned below. ","date":"20-08-2022","objectID":"/add_steps_numbers_to_tasksequence/:1:0","tags":["MDT"],"title":"Add Steps numbers to Task Sequence","uri":"/add_steps_numbers_to_tasksequence/"},{"categories":["MDT"],"content":"Original ReportProgress Function in ZTIUtility.vbs Public Function ReportProgress(sMsg, iPercent) Dim iMaxPercent Dim oProgress Dim uStep Dim uMaxStep CreateEntry \"Update progress [ \" \u0026 iPercent \u0026 \" ] : \" \u0026 sMsg , LogTypeVerbose ' Try to create the progress UI object On Error Resume Next Set oProgress = CreateObject(\"Microsoft.SMS.TSProgressUI\") If Err then Err.Clear ' Record the progress in the registry oShell.RegWrite \"HKLM\\Software\\Microsoft\\Deployment 4\\ProgressPercent\", iPercent, \"REG_DWORD\" oShell.RegWrite \"HKLM\\Software\\Microsoft\\Deployment 4\\ProgressText\", sMsg, \"REG_SZ\" on error goto 0 Exit Function End if On Error Goto 0 ' Update the progress On Error Resume Next iMaxPercent = 100 uStep = CLng(oEnvironment.Item(\"_SMSTSNextInstructionPointer\")) uMaxStep = CLng(oEnvironment.Item(\"_SMSTSInstructionTableSize\")) Call oProgress.ShowActionProgress(oEnvironment.Item(\"_SMSTSOrgName\"), oEnvironment.Item(\"_SMSTSPackageName\"), oEnvironment.Item(\"_SMSTSCustomProgressDialogMessage\"), oEnvironment.Item(\"_SMSTSCurrentActionName\"), (uStep), (uMaxStep), sMsg, (iPercent), (iMaxPercent)) If Err then CreateEntry \"Unable to update progress: \" \u0026 Err.Description \u0026 \" (\" \u0026 Err.Number \u0026 \")\", LogTypeInfo ReportProgress = Failure Err.Clear Exit Function End if On Error Goto 0 ' Dispose of the object Set oProgress = Nothing End Function ","date":"20-08-2022","objectID":"/add_steps_numbers_to_tasksequence/:2:0","tags":["MDT"],"title":"Add Steps numbers to Task Sequence","uri":"/add_steps_numbers_to_tasksequence/"},{"categories":["MDT"],"content":"Modified ReportProgress Function in ZTIUtility.vbs Public Function ReportProgress(sMsg, iPercent) Dim iMaxPercent Dim oProgress Dim uStep Dim uMaxStep 'Region http://www.systanddeploy.com/2018/02/add-complete-progression-status-to.html Dim uStatus, uStep_Division, uStep_Division_Round, uStep_Percent 'End Region CreateEntry \"Update progress [ \" \u0026 iPercent \u0026 \" ] : \" \u0026 sMsg , LogTypeVerbose ' Try to create the progress UI object On Error Resume Next Set oProgress = CreateObject(\"Microsoft.SMS.TSProgressUI\") If Err then Err.Clear ' Record the progress in the registry oShell.RegWrite \"HKLM\\Software\\Microsoft\\Deployment 4\\ProgressPercent\", iPercent, \"REG_DWORD\" oShell.RegWrite \"HKLM\\Software\\Microsoft\\Deployment 4\\ProgressText\", sMsg, \"REG_SZ\" on error goto 0 Exit Function End if On Error Goto 0 ' Update the progress On Error Resume Next iMaxPercent = 100 uStep = CLng(oEnvironment.Item(\"_SMSTSNextInstructionPointer\")) uMaxStep = CLng(oEnvironment.Item(\"_SMSTSInstructionTableSize\")) 'Region http://www.systanddeploy.com/2018/02/add-complete-progression-status-to.html uStep_Division = uStep / uMaxStep * 100 uStep_Division_Round = Round(uStep_Division) uStep_Percent = uStep_Division_Round \u0026 \" % completed\" uStatus = oEnvironment.Item(\"_SMSTSCurrentActionName\") \u0026 \" - \" \u0026 \" Step \" \u0026 uStep \u0026 \" on \" \u0026 uMaxStep \u0026 \" - \" \u0026 uStep_Percent Call oProgress.ShowActionProgress(oEnvironment.Item(\"_SMSTSOrgName\"), oEnvironment.Item(\"_SMSTSPackageName\"), oEnvironment.Item(\"_SMSTSCustomProgressDialogMessage\"), uStatus, (uStep), (uMaxStep), sMsg, (iPercent), (iMaxPercent)) 'End Region If Err then CreateEntry \"Unable to update progress: \" \u0026 Err.Description \u0026 \" (\" \u0026 Err.Number \u0026 \")\", LogTypeInfo ReportProgress = Failure Err.Clear Exit Function End if On Error Goto 0 ' Dispose of the object Set oProgress = Nothing End Function ","date":"20-08-2022","objectID":"/add_steps_numbers_to_tasksequence/:3:0","tags":["MDT"],"title":"Add Steps numbers to Task Sequence","uri":"/add_steps_numbers_to_tasksequence/"},{"categories":["MDT"],"content":"When receiving the error, “A connection to the deployment share (\\mdt\\DeploymentShare) could not be made.” The solution is to add a delay to a task sequence. In the deployment share , scripts folder edit the Litetouch.wsf script. Function ValidateDeployRootWithRecovery Dim sARF Dim sNetworkErrorHint DIm iRetVal Dim sLTISuspend 'Delay wait for DHCP wscript.sleep 5000 If oUtility.ValidateConnectionEx(oEnvironment.Item(\"DeployRoot\"), True) = Success then ValidateDeployRootWithRecovery = SUCCESS exit function End if ","date":"20-08-2022","objectID":"/adding_delay_to-_mdt_tasksequence/:0:0","tags":["MDT"],"title":"Adding a delay to MDT Task Sequence","uri":"/adding_delay_to-_mdt_tasksequence/"},{"categories":["MDT"],"content":"Sometimes MDT deployments fail and leave the disk in a dirty (failed) state, whem you choose yes and the task sequence failes try the following solution. Press F8 (opens a CMD window) Unplug any USB drives or other mass storage devices - you should end up with just the internal hard drive left (CD/DVD drives don’t count here) In the CMD window enter: DiskPart (launches the Disk Partitioning window) In the DiskPart window enter: list disk (this will show you a list of discs available) If all other drives were unattached then only 1 disk will be listed - note the number associated with the disk (most likely it will be ZERO) In the DiskPart window enter: select disk # (where # is your disc number) In the DiskPart window enter: clean (this will wipe the disk clean of all partitions and therefore clear your dirty deployment) In the DiskPart window enter: exit (should close) In the CMD window enter\" exit (should close and reboot) ","date":"20-08-2022","objectID":"/dirty_enviromnet/:0:0","tags":["MDT"],"title":"Dirty Environment","uri":"/dirty_enviromnet/"},{"categories":["MDT"],"content":"Windows 10 deployments using the Microsoft Deployment Toolkit (MDT) build 8456 fail when used with the Windows Assessment and Deployment Kit (ADK) for Windows 10 and 11. The BIOS firmware type is incorrectly identified as UEFI resulting in failures when refreshing an existing computer with a new version of Windows. When this issue occurs, the smsts.log will record the following entry: UEFI: true Errors resembling the following are then recorded at the end of the process. The following update to resolve this problem is available for download from the Microsoft Download Center: Download this update now. Close the Deployment Workbench. Backup the existing x86 and x64 versions of the Microsoft.BDD.Utility.dll file in the following locations. %ProgramFiles%\\Microsoft Deployment Toolkit\\Templates\\Distribution\\Tools\\x86 %ProgramFiles%\\Microsoft Deployment Toolkit\\Templates\\Distribution\\Tools\\x64\\ Copy the new files extracted from MDT_KB4564442.exe over the old versions. For each deployment share that you have created, repeat the file replacement (e.g. C:\\DeploymentShare\\Tools\\x86, C:\\DeploymentShare\\Tools\\x64, etc.). Open the Deployment Workbench, select the Deployment Share and choose the Update Deployment Share option, choosing to completely regenerate the boot image. Perform this step for each deployment share to ensure each one is updated with the correct binaries. ","date":"20-08-2022","objectID":"/failure_5616/:0:0","tags":["MDT"],"title":"Failure 5616","uri":"/failure_5616/"},{"categories":["MDT"],"content":"This powershell module can download, install or import the Visual C++ Redistributables into MDT. I use this Powershell Module to install VCRedist during the task sequence, i made a small adjustment to the script because the installation of the Powershell Module needs Nuget to work properly. I add this powershell script as an application into MDT and add it to the task sequence. $installedPackageProvider = Get-PackageProvider if ($installedPackageProvider.Name -notmatch \"NuGet\") { Install-PackageProvider -Name NuGet -force Write-Host(\"Install powershell module NuGet\") } $path = \"C:\\VcRedist\" If(!(test-path $path)) { New-Item -ItemType Directory -Force -Path $path } Install-Module VcRedist -Force Write-Host(\"Install powershell module VcRedist\") Import-Module VcRedist Write-Host(\"import powershell module VcRedist\") $VcList = Get-VcList | Get-VcRedist -Path \"C:\\VcRedist\" $VcList | Install-VcRedist -Path C:\\VcRedist This script is originally created by Aaron Parker, see link below for the original article. Original Article ","date":"20-08-2022","objectID":"/install_visual_c-_redistributables_with_vcredist/:0:0","tags":["MDT"],"title":"Install Visual C++ Redistributables with VcRedist","uri":"/install_visual_c-_redistributables_with_vcredist/"},{"categories":["PSADT"],"content":"These are code snippits, I frequently use in PSADT - PowerShell App Deployment Toolkit Commonly used PSADT env variables $envCommonDesktop # C:\\Users\\Public\\Desktop $envCommonStartMenuPrograms # C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs $envProgramFiles # C:\\Program Files $envProgramFilesX86 # C:\\Program Files (x86) $envProgramData # c:\\ProgramData $envUserDesktop # c:\\Users\\{user currently logged in}\\Desktop $envUserStartMenuPrograms # c:\\Users\\{user currently logged in}\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs $envSystemDrive # c: $envWinDir # c:\\windows How to load (“dotsource”) PSADT functions/variables for manual testing (your powershell window must be run as administrator first) cd \"$path_to_PSADT_folder_youre_working_from\" . .\\AppDeployToolkit\\AppDeployToolkitMain.ps1 Examples of exe install Execute-Process -Path '\u003capplication\u003e.exe' -Parameters '/quiet' -WaitForMsiExec:$true Execute-Process -Path \"$dirFiles\\DirectX\\DXSetup.exe\" -Parameters '/silent' -WindowStyle 'Hidden' open notepad, don’t wait for it to close before proceeding (i.e. continue with script) Execute-Process -Path \"$envSystemRoot\\notepad.exe\" -NoWait Execute an .exe, and hide confidential parameters from log file $serialisation_params = '-batchmode -quit -serial \u003caa-bb-cc-dd-ee-ffff11111\u003e -username \"\u003cserialisation username\u003e\" -password \"SuperSecret123\"' Execute-Process -Path \"$envProgramFiles\\Application\\Serialise.exe\" -Parameters \"$serialisation_params\" -SecureParameters:$True Example to install an msi Execute-MSI -Action 'Install' -Path \"$dirFiles\\\u003capplication\u003e.msi\" -Parameters 'REBOOT=ReallySuppress /QN' Execute-MSI -Action 'Install' -Path 'Discovery 2015.1.msi' MSI install + transform file Execute-MSI -Action 'Install' -Path 'Adobe_Reader_11.0.0_EN.msi' -Transform 'Adobe_Reader_11.0.0_EN_01.mst' Install a patch Execute-MSI -Action 'Patch' -Path 'Adobe_Reader_11.0.3_EN.msp' To uninstall an MSI Execute-MSI -Action Uninstall -Path '{5708517C-59A3-45C6-9727-6C06C8595AFD}' Uninstall a number of msi codes \"{2E873893-A883-4C06-8308-7B491D58F3D6}\", \u003c# Example #\u003e` \"{2E873893-A883-4C06-8308-7B491D58F3D6}\", \u003c# Example #\u003e` \"{2E873893-A883-4C06-8308-7B491D58F3D6}\", \u003c# Example #\u003e` \"{2E873893-A883-4C06-8308-7B491D58F3D6}\", \u003c# Example #\u003e` \"{2E873893-A883-4C06-8308-7B491D58F3D6}\", \u003c# Example #\u003e` \"{B234DC00-1003-47E7-8111-230AA9E6BF10}\" \u003c# Last example cannot have a comma after the double quotes #\u003e` | % { Execute-MSI -Action 'Uninstall' -Path \"$_\" } \u003c# foreach item, uninstall #\u003e Run a vbscript Execute-Process -Path \"cscript.exe\" -Parameters \"$dirFiles\\whatever.vbs\" Copy a file to the correct relative location for all user accounts grabbed from here: http://psappdeploytoolkit.com/forums/topic/copy-file-to-all-users-currently-logged-in-and-for-all-future-users/ $ProfilePaths = Get-UserProfiles | Select-Object -ExpandProperty 'ProfilePath' ForEach ($Profile in $ProfilePaths) { Copy-File -Path \"$dirFiles\\Example\\example.ini\" -Destination \"$Profile\\Example\\To\\Path\\\" } Remove registry key these are to delete the whole ‘folder’ reg key Remove-RegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Macromedia\\FlashPlayer\\SafeVersions' -Recurse Remove-RegistryKey -Key 'HKLM:SOFTWARE\\Macromedia\\FlashPlayer\\SafeVersions' -Recurse This is to remove a specific reg key item from within a ‘folder’ Remove-RegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run' -Name 'RunAppInstall' Remove-RegistryKey -Key 'HKLM:SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run' -Name 'RunAppInstall' Create a reg key Set-RegistryKey -Key 'HKEY_LOCAL_MACHINE\\SOFTWARE\\LMKR\\Licensing' -Name 'LMKR_LICENSE_FILE' -Value '@license'-Type String -ContinueOnError:$True To set an HKCU key for all users including default profile [scriptblock]$HKCURegistrySettings = { # I included both to illustrate that HKCU\\ is an acceptable abbreviation Set-RegistryKey -Key 'HKEY_CURRENT_USER\\SOFTWARE\\Classes\\AppX4hxtad77fbk3jkkeerkrm0ze94wjf3s9' -Name 'NoOpenWith' -Value '\"\"'-Type String -Con","date":"20-08-2022","objectID":"/psadt_cheatsheet/:0:0","tags":["PSDAT"],"title":"PSADT Cheatsheet","uri":"/psadt_cheatsheet/"},{"categories":null,"content":"about","date":"01-01-0001","objectID":"/about/about/","tags":null,"title":"About","uri":"/about/about/"},{"categories":null,"content":"About Me My name is Raymond Zaagsma and I live in the city of Rotterdam, The Netherlands. I work as an Senior Consultant at Pink Elephant Netherlands. My professional focus is on products offered by Microsoft like Enterprise Mobility, Azure Virtual Desktop, Azure Image Builder, Microsoft Deployment Toolkit and Winget. Other product like Powershell App Deployment Toolkit for Application Packaging and Liquit will also be reviewed. ","date":"01-01-0001","objectID":"/about/about/:1:0","tags":null,"title":"About","uri":"/about/about/"}]